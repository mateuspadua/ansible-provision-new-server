version: '3.6'

services:

  # ---------------------------------------------------------------------------
  # Postgres
  # ---------------------------------------------------------------------------

  postgres:
    container_name: aiseal-postgres
    image: postgres:latest
    ports:
      - 54320:5432
    volumes:
      - ./containers/postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - ./containers/postgres/data:/var/lib/postgresql/data
    env_file:
      - ./containers/postgres/.env

  # ---------------------------------------------------------------------------
  # Redis
  # ---------------------------------------------------------------------------

  redis:
    container_name: aiseal-redis
    restart: always
    image: redis:latest
    ports:
      - 63790:6379

  # ---------------------------------------------------------------------------
  # Elastic Services
  # ---------------------------------------------------------------------------

  elasticsearch:
    container_name: aiseal-elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:6.3.0
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./containers/elasticsearch:/usr/share/elasticsearch/data
    ports:
      - 9200:9200

  kibana:
    container_name: aiseal-kibana
    image: docker.elastic.co/kibana/kibana:6.3.0
    logging:
      driver: none
    volumes:
      - ./containers/kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
    links:
      - elasticsearch:elasticsearch
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch

  # ---------------------------------------------------------------------------
  # Microservices
  # ---------------------------------------------------------------------------

  # Heimdall (12/06/2018 11:03 - Deepak Vashist)
  # User and authentication/authorization microservice
  heimdall:
    container_name: heimdall
    restart: always
    build:
      context: ./projects/heimdall
      dockerfile: Dockerfile
    ports:
      - 8000:8000
    links:
      - postgres:postgres
    env_file:
      - ./containers/postgres/.env
    volumes:
      - ./projects/heimdall:/usr/src/app
      - ./containers/scripts:/usr/src/docker_scripts
    command: bash -c "/usr/src/docker_scripts/wait-for-postgres.sh postgres python /usr/src/app/src/manage.py runserver 0.0.0.0:8000"
    depends_on:
      - postgres

  # Chronos (18/06/2018 11:45 - Deepak Vashist)
  # Users schedules, events, important dates...
  chronos:
    container_name: chronos
    restart: always
    build:
      context: ./projects/chronos
      dockerfile: Dockerfile
    ports:
      - 8001:8001
    links:
      - postgres:postgres
      - elasticsearch:elasticsearch
    env_file:
      - ./containers/postgres/.env
    volumes:
      - ./projects/chronos:/usr/src/app
      - ./containers/scripts:/usr/src/docker_scripts
    command: bash -c "/usr/src/docker_scripts/wait-for-postgres.sh postgres python /usr/src/app/src/manage.py runserver 0.0.0.0:8001"
    depends_on:
      - postgres
      - elasticsearch

  # Tati (22/06/2018 14:14 - Deepak Vashist)
  # Tati CORE modelue
  tati:
    container_name: tati
    restart: always
    build:
      context: ./projects/tati
      dockerfile: Dockerfile
    ports:
      - 8002:8002
    links:
      - postgres:postgres
    env_file:
      - ./containers/postgres/.env
    volumes:
      - ./projects/tati:/usr/src/app
      - ./containers/scripts:/usr/src/docker_scripts
    command: bash -c "/usr/src/docker_scripts/wait-for-postgres.sh postgres python /usr/src/app/src/manage.py runserver 0.0.0.0:8002"
    depends_on:
      - postgres

  # HUBES (26/06/2018 14:47 - Deepak Vashist)
  # HUBES (HUB Educational Systems)
  hubes:
    container_name: hubes
    restart: always
    build:
      context: ./projects/hubes
      dockerfile: Dockerfile
    ports:
      - 8003:8003
    links:
      - heimdall:heimdall
      - chronos:chronos
      - tati:tati
      - atena:atena
    env_file:
      - ./containers/postgres/.env
    volumes:
      - ./projects/hubes:/usr/src/app
      - ./containers/scripts:/usr/src/docker_scripts
    command: bash -c "python /usr/src/app/src/manage.py runserver 0.0.0.0:8003"

  # Atena (18/06/2018 11:45 - Deepak Vashist)
  # Contents, texts, videos, questions, ...
  atena:
    container_name: atena
    restart: always
    build:
      context: ./projects/atena
      dockerfile: Dockerfile
    ports:
      - 8004:8004
    links:
      - postgres:postgres
      - elasticsearch:elasticsearch
    env_file:
      - ./containers/postgres/.env
    volumes:
      - ./projects/atena:/usr/src/app
      - ./containers/scripts:/usr/src/docker_scripts
    command: bash -c "/usr/src/docker_scripts/wait-for-postgres.sh postgres python /usr/src/app/src/manage.py runserver 0.0.0.0:8004"
    depends_on:
      - postgres
      - elasticsearch

  # Hermes (05/07/2018 09:39 - Deepak Vashist)
  # PLN Service
  hermes:
    container_name: hermes
    restart: always
    build:
      context: ./projects/hermes
      dockerfile: Dockerfile
    ports:
      - 8005:8005
    links:
      - postgres:postgres
    env_file:
      - ./containers/postgres/.env
    volumes:
      - ./projects/hermes:/usr/src/app
      - ./containers/scripts:/usr/src/docker_scripts
    command: bash -c "/usr/src/docker_scripts/wait-for-postgres.sh postgres python /usr/src/app/src/manage.py runserver 0.0.0.0:8005"
    depends_on:
      - postgres
